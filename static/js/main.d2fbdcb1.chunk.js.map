{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/api.js","api/coments.js","components/PostDetails/PostDetails.jsx","api/posts.js","api/users.js","App.jsx","index.js"],"names":["PostsList","posts","onClickSelectPost","postId","className","map","post","key","id","userId","title","type","onClick","NewCommentForm","onAdd","selectedPostId","useState","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","BASE_URL","request","url","option","fetch","then","response","json","result","data","creatComment","method","JSON","stringify","headers","PostDetails","setPost","comments","setCommnets","visibilCommnet","setVisibilComment","loadComments","useEffect","deleteComment","a","commentId","addComment","length","comment","users","App","setUsers","setPosts","userChooseId","setUserChooseId","setSelectedPostId","filter","user","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2fbdcb1.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\n\nexport const PostsList = ({\n  posts,\n  onClickSelectPost,\n  postId,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n              {' '}\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => onClickSelectPost(post.id)}\n          >\n            {post.id === postId ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onClickSelectPost: PropTypes.func.isRequired,\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ onAdd, selectedPostId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const addNewComment = () => {\n    onAdd({\n      name,\n      email,\n      body,\n      postId: selectedPostId,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addNewComment();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={({ target }) => setEmail(target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={({ target }) => setBody(target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, option = {}) => fetch(BASE_URL + url, option)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const post = (url, data) => request(url, {\n  method: 'POST',\n  body: JSON.stringify(data),\n  headers: {\n    'Content-Type': 'application/json; charset=UTF-8',\n  },\n});\n","import { request, post } from './api';\n\nconst adress = '/comments';\n\nexport const getPostComments = postId => request(`${adress}?postId=${postId}`);\n\nexport const removeComment = commentId => request(`${adress}/${commentId}`, {\n  method: 'DELETE',\n});\n\nexport const creatComment = body => post(adress, body);\n","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport { getPostDetails } from '../../api/posts';\nimport {\n  getPostComments,\n  removeComment,\n  creatComment,\n} from '../../api/coments';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setCommnets] = useState([]);\n  const [visibilCommnet, setVisibilComment] = useState(false);\n\n  const loadComments = () => {\n    getPostComments(selectedPostId)\n      .then(setCommnets);\n  };\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(setPost);\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    loadComments();\n  }, [selectedPostId]);\n\n  const deleteComment = async(id) => {\n    await removeComment(id);\n    loadComments();\n  };\n\n  const addComment = async(body) => {\n    await creatComment(body);\n    loadComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {selectedPostId ? (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>\n              {post ? (\n                post.body\n              ) : (\n                'Loading...'\n              )}\n            </p>\n          </section>\n\n          {comments.length === 0 ? (\n            'There is no comments yeat'\n          ) : (\n            <section className=\"PostDetails__comments\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setVisibilComment(!visibilCommnet)}\n              >\n                {visibilCommnet ? 'Show comments' : 'Hide commnets'}\n              </button>\n            </section>\n          )}\n\n          {!visibilCommnet && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li\n                  className=\"PostDetails__list-item\"\n                  key={comment.id}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => deleteComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>\n                    {comment.name}\n                  </p>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                onAdd={addComment}\n                selectedPostId={selectedPostId}\n              />\n            </div>\n          </section>\n        </>\n      ) : (\n        <>\n          <p>\n            Please select a post)\n          </p>\n        </>\n      )}\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import { request } from './api';\n\nconst adress = '/posts';\n\nexport const getPosts = () => request(adress);\n\nexport const getUserPosts = userId => request(`${adress}?userId=${userId}`);\n\nexport const getPostDetails = postId => request(`${adress}/${postId}`);\n","import { request } from './api';\n\nconst users = [\n  'Leanne Graham',\n  'Ervin Howell',\n  'Clementine Bauch',\n  'Patricia Lebsack',\n  'Chelsey Dietrich',\n  'Mrs. Dennis Schulist',\n  'Kurtis Weissnat',\n  'Nicholas Runolfsdottir V',\n  'Glenna Reichert',\n  'Leanne Graham',\n];\n\nconst adress = '/users';\n\nexport const getUsers = () => request(adress)\n  .then(result => result\n    .filter(user => users.includes(user.name)));\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport { getPosts, getUserPosts } from './api/posts';\nimport { getUsers } from './api/users';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [userChooseId, setUserChooseId] = useState('');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    if (userChooseId) {\n      getUserPosts(userChooseId)\n        .then(setPosts);\n    } else {\n      getPosts()\n        .then(setPosts);\n    }\n  }, [userChooseId]);\n\n  useEffect(() => {\n    getUsers().then(setUsers);\n  }, []);\n\n  const selectedPost = (postId) => {\n    if (selectedPostId !== postId) {\n      setSelectedPostId(postId);\n    } else {\n      setSelectedPostId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userChooseId}\n            onChange={({ target }) => {\n              setUserChooseId(target.value);\n            }}\n          >\n            <option value=\"\">All users</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            onClickSelectPost={selectedPost}\n            postId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}